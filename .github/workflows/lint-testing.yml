name: Lints-Tests

on:
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  RUSTFLAGS: -C debuginfo=0 # Do not produce debug symbols to keep memory usage down

jobs:
  test-leaks:
    name: test leaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}}

  test-os:
    needs: [test-leaks]
    name: test ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]

    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup override set stable && rustup update

      - name: Install clippy
        run: rustup component add clippy

      - name: cache rust
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}-v1

      - name: Run cargo tests
        run: |
          make format
          make lints
          make test.unit
        env:
          RUST_BACKTRACE: 1

  test-build:
    needs: [test-os]
    name: build - ubuntu - ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64, x86]
        manylinux: [auto]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - run: pip install -U twine

      - name: build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux }}
          args: --release --out dist --interpreter 3.11
          rust-toolchain: stable
          docker-options: -e CI
          before-script-linux:
            | # ref: https://github.com/sfackler/rust-openssl/issues/2036#issuecomment-1724324145
            # If we're running on rhel centos, install needed packages.
            if command -v yum &> /dev/null; then
                yum update -y && yum install -y perl-core openssl openssl-devel pkgconfig libatomic

                # If we're running on i686 we need to symlink libatomic
                # in order to build openssl with -latomic flag.
                if [[ ! -d "/usr/lib64" ]]; then
                    ln -s /usr/lib/libatomic.so.1 /usr/lib/libatomic.so
                fi
            else
                # If we're running on debian-based system.
                sudo apt update -y && sudo apt-get install -y libssl-dev openssl pkg-config
            fi

        env:
          RUST_BACKTRACE: 1

      - run: ls -lh dist/
      - run: twine check --strict dist/*
